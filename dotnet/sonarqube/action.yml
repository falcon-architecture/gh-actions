name: SonarQube Analysis
description: "SonarQube Analysis"
inputs:
  sources:
    required: true
    description: Source code path
  tests:
    default: 'tests/'
    description: Test code path
  solution-path:
    description: Dotnet solution file path
  test-solution-path:
    description: Dotnet test solution file path
  exclusions:
    description: Exclusions
  test-exclusions:
    description: Test Exclusions  
  dotnet-version:
    default: '[9.0.x]'
    description: dotnet framework version
  github-token:
    required: true
    description: 'GitHub Token'
  sonar-project-key:
    required: true
    description: 'Sonar Project Key'
  sonar-organization:
    required: true
    description: 'Sonar Organization'
  sonar-token:
    required: true
    description: 'Sonar Token'
  host-url:
    default: 'https://sonarcloud.io'
    description: 'Sonar Host URL'
  verbose:
    default: 'false'
    description: 'Verbose'

runs:
  using: 'composite'
  steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: "zulu"
        java-version: 17

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v4
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install tools
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p ./.sonar/scanner
        dotnet tool update dotnet-sonarscanner  --version 8.0.3  --tool-path ./.sonar/scanner
        dotnet tool update dotnet-coverage --version 17.12.4  --tool-path ./.sonar/scanner
        dotnet tool list --tool-path ./.sonar/scanner

    - name: Restore NuGet packages
      shell: bash
      run: |
        ls -ls
        dotnet restore ${{inputs.solution-path}}
        dotnet restore ${{inputs.test-solution-path}}
      
    - name: Run tests and collect coverage
      shell: bash
      run: |
        ./.sonar/scanner/dotnet-coverage collect "dotnet test ${{inputs.test-solution-path}}" -f xml -o "coverage.xml"

    - name: SonarCloud Scan
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin \
              /k:"${{inputs.sonar-project-key}}" \
              /o:"${{inputs.sonar-organization}}" \
              /d:sonar.token="${{ env.SONAR_TOKEN }}" \
              /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml" \
              /d:sonar.host.url="${{inputs.host-url}}" \
              /d:sonar.sources="${{inputs.sources}}" \
              /d:sonar.exclusions="${{inputs.exclusions}}" \
              /d:sonar.language="cs" \
              /d:sonar.scanner.skipJreProvisioning=true \
              /d:sonar.verbose=${{inputs.verbose}} \
              /d:sonar.tests="${{inputs.tests}}" \
              /d:sonar.test.exclusions="${{inputs.test-exclusions}}"
        dotnet build --no-restore --no-incremental
        ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ env.SONAR_TOKEN }}"